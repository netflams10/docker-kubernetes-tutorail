version: '3'

services:



  api:
    build:
      context: ./.docker/php
      dockerfile: Dockerfile.dev
    volumes: 
      - ./:/var/www/html/
    networks: 
      - app

  web:
    image: nginx:1.17
    working_dir: /var/www/html
    volumes:
        - ./:/var/www/html
        - .docker/nginx/nginx_local_template.conf:/etc/nginx/conf.d/default.conf
    ports:
        - "8082:80"
    networks:
        - app
  
  # if you are bootstrapping with ui in laravel
  # RUN "docker-compose run --rm node npm install"
  # node:
  #   image: node:12
  #   user: node
  #   working_dir: /assets
  #   volumes:
  #     - ./:assets
  #   command: npm run watch

  db:
    image: mysql:8
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_ROOT_HOST: "%"
      MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"
      MYSQL_DATABASE: "${DB_DATABASE}"
      MYSQL_USER: "${DB_USERNAME}"
      MYSQL_PASSWORD: "${DB_PASSWORD}"
    volumes: 
      - .docker/mysqldata:/var/lib/mysql
    networks: 
      - app

  redis:
    image: redis:5
    container_name: redis
    volumes: 
      - .docker/redisdata:/data
    networks:
      - app


volumes:
    mysqldata:
    redisdata:
networks: 
  app:
    driver: bridge